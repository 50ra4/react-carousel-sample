{"version":3,"file":"Carousel.stories.117ed73e.js","sources":["../../../src/presentation/components/Carousel/Carousel.tsx"],"sourcesContent":["import React, { useCallback, useRef } from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nexport type CarouselItem = {\n  key: string;\n  caption: string;\n};\n\nexport type CarouselProps = {\n  className?: string;\n  carouselKey: string;\n  items: CarouselItem[];\n};\n\nconst createSlideId = (carouselKey: string, itemKey: string) =>\n  `${carouselKey}_${itemKey}`;\n\nexport function Carousel({ className, carouselKey, items }: CarouselProps) {\n  const rootRef = useRef<HTMLDivElement | null>(null);\n\n  const scrollToSlide = useCallback((id: string) => {\n    const target: HTMLElement | undefined =\n      rootRef.current?.querySelector(`#${id}`) ?? undefined;\n    if (!target) {\n      return;\n    }\n    target.scrollIntoView();\n  }, []);\n\n  return (\n    <Root ref={rootRef} className={className}>\n      <Slider>\n        {items.map(({ key }, i) => (\n          <Slide key={key} id={createSlideId(carouselKey, key)}>\n            <Snapper />\n            <NavigationPreview\n              onClick={() => {\n                const slideId = createSlideId(\n                  carouselKey,\n                  i === 0 ? items[items.length - 1].key : items[i - 1].key,\n                );\n                scrollToSlide(slideId);\n              }}\n            >\n              Go to previous slide\n            </NavigationPreview>\n            <NavigationNext\n              onClick={() => {\n                const slideId = createSlideId(\n                  carouselKey,\n                  i === items.length - 1 ? items[0].key : items[i + 1].key,\n                );\n                scrollToSlide(slideId);\n              }}\n            >\n              Go to next slide\n            </NavigationNext>\n          </Slide>\n        ))}\n      </Slider>\n      <Navigation>\n        <NavigationList className={className}>\n          {items.map(({ key, caption }) => (\n            <NavigationItem key={key}>\n              <NavigationButton\n                onClick={() => {\n                  const slideId = createSlideId(carouselKey, key);\n                  scrollToSlide(slideId);\n                }}\n              >\n                Go to {caption}\n              </NavigationButton>\n            </NavigationItem>\n          ))}\n        </NavigationList>\n      </Navigation>\n    </Root>\n  );\n}\n\nconst toNext = keyframes`\n  75% {\n    left: 0;\n  }\n  95% {\n    left: 100%;\n  }\n  98% {\n    left: 100%;\n  }\n  99% {\n    left: 0;\n  }\n`;\n\nconst toStart = keyframes`\n  75% {\n    left: 0;\n  }\n  95% {\n    left: -300%;\n  }\n  98% {\n    left: -300%;\n  }\n  99% {\n    left: 0;\n  }\n`;\n\nconst snap = keyframes`\n  96% {\n    scroll-snap-align: center;\n  }\n  97% {\n    scroll-snap-align: none;\n  }\n  99% {\n    scroll-snap-align: none;\n  }\n  100% {\n    scroll-snap-align: center;\n  }\n`;\n\nconst Snapper = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  scroll-snap-align: center;\n`;\n\nconst Slide = styled.li`\n  position: relative;\n  flex: 0 0 100%;\n  width: 100%;\n  background-color: #f99;\n  counter-increment: item;\n\n  &:nth-child(even) {\n    background-color: #99f;\n  }\n\n  &:before {\n    content: counter(item);\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate3d(-50%, -40%, 70px);\n    color: #fff;\n    font-size: 2em;\n  }\n`;\n\nconst Root = styled.div`\n  position: relative;\n  padding-top: 75%;\n  filter: drop-shadow(0 0 10px #0003);\n  perspective: 100px;\n\n  /* animation\n  @media (prefers-reduced-motion: reduce) {\n    ${Snapper} {\n      animation-name: none;\n    }\n  }\n\n  @media (hover: hover) {\n    ${Snapper} {\n      animation-name: ${toNext}, ${snap};\n      animation-timing-function: ease;\n      animation-duration: 4s;\n      animation-iteration-count: infinite;\n    }\n\n    ${Slide}:last-child {\n      ${Snapper} {\n        animation-name: ${toStart}, ${snap};\n      }\n    }\n  }\n\n  &:hover,\n  &:focus-within {\n    ${Snapper} {\n      animation-name: none;\n    }\n  } \n  */\n`;\n\nconst Slider = styled.ol`\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  display: flex;\n  overflow-x: scroll;\n  counter-reset: item;\n  scroll-behavior: smooth;\n  scroll-snap-type: x mandatory;\n`;\n\nconst Navigation = styled.aside`\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  text-align: center;\n`;\nconst NavigationList = styled.ol`\n  display: inline-block;\n`;\nconst NavigationItem = styled.li`\n  display: inline-block;\n`;\nconst NavigationButton = styled.button`\n  display: inline-block;\n  cursor: pointer;\n  width: 16px;\n  height: 16px;\n  background-color: #333;\n  border-radius: 50%;\n  border: none;\n  margin: 0 4px 24px;\n  font-size: 0;\n  transition: transform 0.1s;\n`;\n\nconst ArrowButton = ({\n  className,\n  onClick,\n  children,\n}: {\n  className?: string;\n  onClick: () => void;\n  children?: React.ReactNode;\n}) => {\n  return (\n    <ArrowCircle className={className} onClick={onClick}>\n      <ArrowTriangle />\n      {children}\n    </ArrowCircle>\n  );\n};\n\nconst ArrowCircle = styled.button`\n  cursor: pointer;\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  font-size: 0;\n  outline: 0;\n  border: none;\n  background-color: #333;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst ArrowTriangle = styled.div`\n  margin-right: 7.5px;\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 10px 12.5px 10px 0;\n  border-color: transparent #ffe transparent transparent;\n`;\n\nconst NavigationPreview = styled(ArrowButton)`\n  margin-top: 37.5%;\n  transform: translateY(-50%);\n  position: absolute;\n  top: 0;\n  left: 8px;\n`;\n\nconst NavigationNext = styled(ArrowButton)`\n  margin-top: 37.5%;\n  transform: translateY(-50%) rotate(180deg);\n  position: absolute;\n  top: 0;\n  right: 8px;\n`;\n"],"names":["createSlideId","__name","carouselKey","itemKey","Carousel","className","rootRef","useRef","scrollToSlide","useCallback","id","target","_b","_a","_jsxs","Root","_jsx","Slider","items","key","Snapper","NavigationPreview","slideId","NavigationNext","Navigation","NavigationList","caption","NavigationButton","toNext","keyframes","toStart","snap","styled","Slide","div","NavigationItem","ArrowButton","onClick","ArrowCircle","ArrowTriangle","children"],"mappings":"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"}